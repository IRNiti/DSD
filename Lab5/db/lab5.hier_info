|g10_rptest
start => RandomPatternGenerator:gate1.Start
P_generatedN => RandomPatternGenerator:gate1.P_generatedN
clk => RandomPatternGenerator:gate1.clk
segment1[0] <= g10_7_segment_decoder:gate6.segments[0]
segment1[1] <= g10_7_segment_decoder:gate6.segments[1]
segment1[2] <= g10_7_segment_decoder:gate6.segments[2]
segment1[3] <= g10_7_segment_decoder:gate6.segments[3]
segment1[4] <= g10_7_segment_decoder:gate6.segments[4]
segment1[5] <= g10_7_segment_decoder:gate6.segments[5]
segment1[6] <= g10_7_segment_decoder:gate6.segments[6]
segment2[0] <= g10_7_segment_decoder:gate7.segments[0]
segment2[1] <= g10_7_segment_decoder:gate7.segments[1]
segment2[2] <= g10_7_segment_decoder:gate7.segments[2]
segment2[3] <= g10_7_segment_decoder:gate7.segments[3]
segment2[4] <= g10_7_segment_decoder:gate7.segments[4]
segment2[5] <= g10_7_segment_decoder:gate7.segments[5]
segment2[6] <= g10_7_segment_decoder:gate7.segments[6]
segment3[0] <= g10_7_segment_decoder:gate8.segments[0]
segment3[1] <= g10_7_segment_decoder:gate8.segments[1]
segment3[2] <= g10_7_segment_decoder:gate8.segments[2]
segment3[3] <= g10_7_segment_decoder:gate8.segments[3]
segment3[4] <= g10_7_segment_decoder:gate8.segments[4]
segment3[5] <= g10_7_segment_decoder:gate8.segments[5]
segment3[6] <= g10_7_segment_decoder:gate8.segments[6]
segment4[0] <= g10_7_segment_decoder:gate9.segments[0]
segment4[1] <= g10_7_segment_decoder:gate9.segments[1]
segment4[2] <= g10_7_segment_decoder:gate9.segments[2]
segment4[3] <= g10_7_segment_decoder:gate9.segments[3]
segment4[4] <= g10_7_segment_decoder:gate9.segments[4]
segment4[5] <= g10_7_segment_decoder:gate9.segments[5]
segment4[6] <= g10_7_segment_decoder:gate9.segments[6]


|g10_rptest|RandomPatternGenerator:gate1
P_generatedN => tce2.OUTPUTSELECT
P_generatedN => tce2.OUTPUTSELECT
P_generatedN => y_present.OUTPUTSELECT
P_generatedN => y_present.OUTPUTSELECT
P_generatedN => y_present.OUTPUTSELECT
clk => counter_table:gate1.CLK
clk => tce2.CLK
clk => tcr2.CLK
clk => register_12bit:gate2.clk
clk => y_present~4.DATAIN
Start => tcr2.OUTPUTSELECT
Start => y_present.OUTPUTSELECT
Start => y_present.OUTPUTSELECT
Start => y_present.OUTPUTSELECT
Start => register_12bit:gate2.clr
Start => tcr2.PRESET
Start => y_present~6.DATAIN
Start => tce2.ENA
RP_LD => register_12bit:gate2.RP_LD
EXT_PATTERN[0] <= register_12bit:gate2.q[0]
EXT_PATTERN[1] <= register_12bit:gate2.q[1]
EXT_PATTERN[2] <= register_12bit:gate2.q[2]
EXT_PATTERN[3] <= register_12bit:gate2.q[3]
EXT_PATTERN[4] <= register_12bit:gate2.q[4]
EXT_PATTERN[5] <= register_12bit:gate2.q[5]
EXT_PATTERN[6] <= register_12bit:gate2.q[6]
EXT_PATTERN[7] <= register_12bit:gate2.q[7]
EXT_PATTERN[8] <= register_12bit:gate2.q[8]
EXT_PATTERN[9] <= register_12bit:gate2.q[9]
EXT_PATTERN[10] <= register_12bit:gate2.q[10]
EXT_PATTERN[11] <= register_12bit:gate2.q[11]


|g10_rptest|RandomPatternGenerator:gate1|counter_table:gate1
TC_EN2 => TM_ADDR1[2].ENA
TC_EN2 => TM_ADDR1[1].ENA
TC_EN2 => TM_ADDR1[0].ENA
TC_EN2 => TM_ADDR2[2].ENA
TC_EN2 => TM_ADDR2[1].ENA
TC_EN2 => TM_ADDR2[0].ENA
TC_EN2 => TM_ADDR3[2].ENA
TC_EN2 => TM_ADDR3[1].ENA
TC_EN2 => TM_ADDR3[0].ENA
TC_EN2 => TM_ADDR4[2].ENA
TC_EN2 => TM_ADDR4[1].ENA
TC_EN2 => TM_ADDR4[0].ENA
TC_RST2 => TM_ADDR4[2].ACLR
TC_RST2 => TM_ADDR4[1].ACLR
TC_RST2 => TM_ADDR4[0].ACLR
TC_RST2 => TM_ADDR3[2].ACLR
TC_RST2 => TM_ADDR3[1].ACLR
TC_RST2 => TM_ADDR3[0].ACLR
TC_RST2 => TM_ADDR2[2].ACLR
TC_RST2 => TM_ADDR2[1].ACLR
TC_RST2 => TM_ADDR2[0].ACLR
TC_RST2 => TM_ADDR1[2].ACLR
TC_RST2 => TM_ADDR1[1].ACLR
TC_RST2 => TM_ADDR1[0].ACLR
TC_RST2 => TM_ADDR1.OUTPUTSELECT
TC_RST2 => TM_ADDR1.OUTPUTSELECT
TC_RST2 => TM_ADDR1.OUTPUTSELECT
TC_RST2 => TM_ADDR2.OUTPUTSELECT
TC_RST2 => TM_ADDR2.OUTPUTSELECT
TC_RST2 => TM_ADDR2.OUTPUTSELECT
TC_RST2 => TM_ADDR3.OUTPUTSELECT
TC_RST2 => TM_ADDR3.OUTPUTSELECT
TC_RST2 => TM_ADDR3.OUTPUTSELECT
TC_RST2 => TM_ADDR4.OUTPUTSELECT
TC_RST2 => TM_ADDR4.OUTPUTSELECT
TC_RST2 => TM_ADDR4.OUTPUTSELECT
CLK => TM_ADDR4[0].CLK
CLK => TM_ADDR4[1].CLK
CLK => TM_ADDR4[2].CLK
CLK => TM_ADDR3[0].CLK
CLK => TM_ADDR3[1].CLK
CLK => TM_ADDR3[2].CLK
CLK => TM_ADDR2[0].CLK
CLK => TM_ADDR2[1].CLK
CLK => TM_ADDR2[2].CLK
CLK => TM_ADDR1[0].CLK
CLK => TM_ADDR1[1].CLK
CLK => TM_ADDR1[2].CLK
TC_LAST <= <GND>
TM_ADDRN[0] <= TM_ADDR1[0].DB_MAX_OUTPUT_PORT_TYPE
TM_ADDRN[1] <= TM_ADDR1[1].DB_MAX_OUTPUT_PORT_TYPE
TM_ADDRN[2] <= TM_ADDR1[2].DB_MAX_OUTPUT_PORT_TYPE
TM_ADDRN[3] <= TM_ADDR2[0].DB_MAX_OUTPUT_PORT_TYPE
TM_ADDRN[4] <= TM_ADDR2[1].DB_MAX_OUTPUT_PORT_TYPE
TM_ADDRN[5] <= TM_ADDR2[2].DB_MAX_OUTPUT_PORT_TYPE
TM_ADDRN[6] <= TM_ADDR3[0].DB_MAX_OUTPUT_PORT_TYPE
TM_ADDRN[7] <= TM_ADDR3[1].DB_MAX_OUTPUT_PORT_TYPE
TM_ADDRN[8] <= TM_ADDR3[2].DB_MAX_OUTPUT_PORT_TYPE
TM_ADDRN[9] <= TM_ADDR4[0].DB_MAX_OUTPUT_PORT_TYPE
TM_ADDRN[10] <= TM_ADDR4[1].DB_MAX_OUTPUT_PORT_TYPE
TM_ADDRN[11] <= TM_ADDR4[2].DB_MAX_OUTPUT_PORT_TYPE


|g10_rptest|RandomPatternGenerator:gate1|register_12bit:gate2
clr => q[0]~reg0.ACLR
clr => q[1]~reg0.ACLR
clr => q[2]~reg0.ACLR
clr => q[3]~reg0.ACLR
clr => q[4]~reg0.ACLR
clr => q[5]~reg0.ACLR
clr => q[6]~reg0.ACLR
clr => q[7]~reg0.ACLR
clr => q[8]~reg0.ACLR
clr => q[9]~reg0.ACLR
clr => q[10]~reg0.ACLR
clr => q[11]~reg0.ACLR
clk => q[0]~reg0.CLK
clk => q[1]~reg0.CLK
clk => q[2]~reg0.CLK
clk => q[3]~reg0.CLK
clk => q[4]~reg0.CLK
clk => q[5]~reg0.CLK
clk => q[6]~reg0.CLK
clk => q[7]~reg0.CLK
clk => q[8]~reg0.CLK
clk => q[9]~reg0.CLK
clk => q[10]~reg0.CLK
clk => q[11]~reg0.CLK
p[0] => q[0]~reg0.DATAIN
p[1] => q[1]~reg0.DATAIN
p[2] => q[2]~reg0.DATAIN
p[3] => q[3]~reg0.DATAIN
p[4] => q[4]~reg0.DATAIN
p[5] => q[5]~reg0.DATAIN
p[6] => q[6]~reg0.DATAIN
p[7] => q[7]~reg0.DATAIN
p[8] => q[8]~reg0.DATAIN
p[9] => q[9]~reg0.DATAIN
p[10] => q[10]~reg0.DATAIN
p[11] => q[11]~reg0.DATAIN
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[8] <= q[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[9] <= q[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[10] <= q[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[11] <= q[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RP_LD => q[11]~reg0.ENA
RP_LD => q[10]~reg0.ENA
RP_LD => q[9]~reg0.ENA
RP_LD => q[8]~reg0.ENA
RP_LD => q[7]~reg0.ENA
RP_LD => q[6]~reg0.ENA
RP_LD => q[5]~reg0.ENA
RP_LD => q[4]~reg0.ENA
RP_LD => q[3]~reg0.ENA
RP_LD => q[2]~reg0.ENA
RP_LD => q[1]~reg0.ENA
RP_LD => q[0]~reg0.ENA


|g10_rptest|g10_3to4_decoder:gate2
input[0] => output[0].DATAIN
input[1] => output[1].DATAIN
input[2] => output[2].DATAIN
output[0] <= input[0].DB_MAX_OUTPUT_PORT_TYPE
output[1] <= input[1].DB_MAX_OUTPUT_PORT_TYPE
output[2] <= input[2].DB_MAX_OUTPUT_PORT_TYPE
output[3] <= <GND>


|g10_rptest|g10_3to4_decoder:gate3
input[0] => output[0].DATAIN
input[1] => output[1].DATAIN
input[2] => output[2].DATAIN
output[0] <= input[0].DB_MAX_OUTPUT_PORT_TYPE
output[1] <= input[1].DB_MAX_OUTPUT_PORT_TYPE
output[2] <= input[2].DB_MAX_OUTPUT_PORT_TYPE
output[3] <= <GND>


|g10_rptest|g10_3to4_decoder:gate4
input[0] => output[0].DATAIN
input[1] => output[1].DATAIN
input[2] => output[2].DATAIN
output[0] <= input[0].DB_MAX_OUTPUT_PORT_TYPE
output[1] <= input[1].DB_MAX_OUTPUT_PORT_TYPE
output[2] <= input[2].DB_MAX_OUTPUT_PORT_TYPE
output[3] <= <GND>


|g10_rptest|g10_3to4_decoder:gate5
input[0] => output[0].DATAIN
input[1] => output[1].DATAIN
input[2] => output[2].DATAIN
output[0] <= input[0].DB_MAX_OUTPUT_PORT_TYPE
output[1] <= input[1].DB_MAX_OUTPUT_PORT_TYPE
output[2] <= input[2].DB_MAX_OUTPUT_PORT_TYPE
output[3] <= <GND>


|g10_rptest|g10_7_segment_decoder:gate6
code[0] => Mux0.IN19
code[0] => Mux1.IN36
code[0] => Mux2.IN36
code[0] => Mux3.IN36
code[0] => Mux4.IN36
code[0] => Mux5.IN36
code[0] => Mux6.IN36
code[0] => Equal0.IN3
code[1] => Mux0.IN18
code[1] => Mux1.IN35
code[1] => Mux2.IN35
code[1] => Mux3.IN35
code[1] => Mux4.IN35
code[1] => Mux5.IN35
code[1] => Mux6.IN35
code[1] => Equal0.IN2
code[2] => Mux0.IN17
code[2] => Mux1.IN34
code[2] => Mux2.IN34
code[2] => Mux3.IN34
code[2] => Mux4.IN34
code[2] => Mux5.IN34
code[2] => Mux6.IN34
code[2] => Equal0.IN1
code[3] => Mux0.IN16
code[3] => Mux1.IN33
code[3] => Mux2.IN33
code[3] => Mux3.IN33
code[3] => Mux4.IN33
code[3] => Mux5.IN33
code[3] => Mux6.IN33
code[3] => Equal0.IN0
RippleBlank_In => Mux1.IN32
RippleBlank_In => Mux2.IN32
RippleBlank_In => Mux3.IN32
RippleBlank_In => Mux4.IN32
RippleBlank_In => Mux5.IN32
RippleBlank_In => Mux6.IN32
RippleBlank_In => RippleBlank_Out.DATAB
RippleBlank_Out <= RippleBlank_Out.DB_MAX_OUTPUT_PORT_TYPE
segments[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|g10_rptest|g10_7_segment_decoder:gate7
code[0] => Mux0.IN19
code[0] => Mux1.IN36
code[0] => Mux2.IN36
code[0] => Mux3.IN36
code[0] => Mux4.IN36
code[0] => Mux5.IN36
code[0] => Mux6.IN36
code[0] => Equal0.IN3
code[1] => Mux0.IN18
code[1] => Mux1.IN35
code[1] => Mux2.IN35
code[1] => Mux3.IN35
code[1] => Mux4.IN35
code[1] => Mux5.IN35
code[1] => Mux6.IN35
code[1] => Equal0.IN2
code[2] => Mux0.IN17
code[2] => Mux1.IN34
code[2] => Mux2.IN34
code[2] => Mux3.IN34
code[2] => Mux4.IN34
code[2] => Mux5.IN34
code[2] => Mux6.IN34
code[2] => Equal0.IN1
code[3] => Mux0.IN16
code[3] => Mux1.IN33
code[3] => Mux2.IN33
code[3] => Mux3.IN33
code[3] => Mux4.IN33
code[3] => Mux5.IN33
code[3] => Mux6.IN33
code[3] => Equal0.IN0
RippleBlank_In => Mux1.IN32
RippleBlank_In => Mux2.IN32
RippleBlank_In => Mux3.IN32
RippleBlank_In => Mux4.IN32
RippleBlank_In => Mux5.IN32
RippleBlank_In => Mux6.IN32
RippleBlank_In => RippleBlank_Out.DATAB
RippleBlank_Out <= RippleBlank_Out.DB_MAX_OUTPUT_PORT_TYPE
segments[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|g10_rptest|g10_7_segment_decoder:gate8
code[0] => Mux0.IN19
code[0] => Mux1.IN36
code[0] => Mux2.IN36
code[0] => Mux3.IN36
code[0] => Mux4.IN36
code[0] => Mux5.IN36
code[0] => Mux6.IN36
code[0] => Equal0.IN3
code[1] => Mux0.IN18
code[1] => Mux1.IN35
code[1] => Mux2.IN35
code[1] => Mux3.IN35
code[1] => Mux4.IN35
code[1] => Mux5.IN35
code[1] => Mux6.IN35
code[1] => Equal0.IN2
code[2] => Mux0.IN17
code[2] => Mux1.IN34
code[2] => Mux2.IN34
code[2] => Mux3.IN34
code[2] => Mux4.IN34
code[2] => Mux5.IN34
code[2] => Mux6.IN34
code[2] => Equal0.IN1
code[3] => Mux0.IN16
code[3] => Mux1.IN33
code[3] => Mux2.IN33
code[3] => Mux3.IN33
code[3] => Mux4.IN33
code[3] => Mux5.IN33
code[3] => Mux6.IN33
code[3] => Equal0.IN0
RippleBlank_In => Mux1.IN32
RippleBlank_In => Mux2.IN32
RippleBlank_In => Mux3.IN32
RippleBlank_In => Mux4.IN32
RippleBlank_In => Mux5.IN32
RippleBlank_In => Mux6.IN32
RippleBlank_In => RippleBlank_Out.DATAB
RippleBlank_Out <= RippleBlank_Out.DB_MAX_OUTPUT_PORT_TYPE
segments[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|g10_rptest|g10_7_segment_decoder:gate9
code[0] => Mux0.IN19
code[0] => Mux1.IN36
code[0] => Mux2.IN36
code[0] => Mux3.IN36
code[0] => Mux4.IN36
code[0] => Mux5.IN36
code[0] => Mux6.IN36
code[0] => Equal0.IN3
code[1] => Mux0.IN18
code[1] => Mux1.IN35
code[1] => Mux2.IN35
code[1] => Mux3.IN35
code[1] => Mux4.IN35
code[1] => Mux5.IN35
code[1] => Mux6.IN35
code[1] => Equal0.IN2
code[2] => Mux0.IN17
code[2] => Mux1.IN34
code[2] => Mux2.IN34
code[2] => Mux3.IN34
code[2] => Mux4.IN34
code[2] => Mux5.IN34
code[2] => Mux6.IN34
code[2] => Equal0.IN1
code[3] => Mux0.IN16
code[3] => Mux1.IN33
code[3] => Mux2.IN33
code[3] => Mux3.IN33
code[3] => Mux4.IN33
code[3] => Mux5.IN33
code[3] => Mux6.IN33
code[3] => Equal0.IN0
RippleBlank_In => Mux1.IN32
RippleBlank_In => Mux2.IN32
RippleBlank_In => Mux3.IN32
RippleBlank_In => Mux4.IN32
RippleBlank_In => Mux5.IN32
RippleBlank_In => Mux6.IN32
RippleBlank_In => RippleBlank_Out.DATAB
RippleBlank_Out <= RippleBlank_Out.DB_MAX_OUTPUT_PORT_TYPE
segments[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


